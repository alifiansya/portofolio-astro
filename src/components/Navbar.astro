---
import type { array } from "astro:schema";

const { class: className = "", linkItems = [], languageItems = [["loremIpsum", "/lorem"], ["loremIpsum", "/lorem"],["loremIpsum", "/lorem"]] } = Astro.props;
---


<nav id="navbar" class={`fixed top-0 w-full z-50 flex justify-between items-center py-4 border-b-2 bg-white border-b-gray-300 transition-shadow duration-300 ${className}`}>
  <div id="left-menu-container" class="flex-1 hidden md:flex">
    <a href="." class="inline-flex items-center gap-2">
      <img src="/images/logo.webp" alt="Mikan Logo" width="32" class="bg-gray-900 rounded-lg rotate-5"/>
      <strong class="text-lg">Mikanmiru</strong>
    </a>
  </div>      
    <div id="middle-menu-container" class="flex-1 hidden md:flex justify-center">
        <ul class="inline-flex gap-10">
            {linkItems.map((item:string) => <li><a href={`#${item.toLowerCase()}`} data-scroll>{item}</a></li>)}
        </ul>
    </div>
    <div id="right-menu-container" class="flex-1 hidden md:flex justify-end">
      <ul class="inline-flex gap-10">
        <div class="relative inline-block text-left">
          <!-- Button -->
          <button id="language-button" class="inline-flex w-full justify-center gap-x-1.5 rounded-md bg-gray-700 px-2 py-2 text-sm font-semibold text-white hover:bg-gray-600">
            <svg class="-mr-0.5 size-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" >
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 21a9.004 9.004 0 0 0 8.716-6.747M12 21a9.004 9.004 0 0 1-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 0 1 7.843 4.582M12 3a8.997 8.997 0 0 0-7.843 4.582m15.686 0A11.953 11.953 0 0 1 12 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0 1 21 12c0 .778-.099 1.533-.284 2.253m0 0A17.919 17.919 0 0 1 12 16.5c-3.162 0-6.133-.815-8.716-2.247m0 0A9.015 9.015 0 0 1 3 12c0-1.605.42-3.113 1.157-4.418" />
            </svg>
            
            EN
            <svg class="-mr-1 size-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" clip-rule="evenodd" d="M5.22 8.22a.75.75 0 011.06 0L10 11.94l3.72-3.72a.75.75 0 111.06 1.06l-4.25 4.25a.75.75 0 01-1.06 0L5.22 9.28a.75.75 0 010-1.06z" />
            </svg>
          </button>
        
          <!-- Dropdown -->
          <div id="language-menu" class="absolute hidden right-0 mt-2 w-32 origin-top-right rounded-md bg-white shadow-md border-1 border-gray-100">
            <div class="py-1">
              {languageItems.map((lang: any) => <a href=`${lang[1]}` class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">{lang[0]}</a>)}
            </div>
          </div>
        </div>
      </ul>
    </div>

    <!-- Mobile menu -->
    <div class="md:hidden">
      <!-- Hamburger button -->
        <button id="mobile-button" class="p-2 border rounded">
          â˜°
        </button>

        <!-- Dropdown links (hidden by default) -->
        <div id="mobile-menu" class="hidden mt-2">
            <ul class="flex flex-col gap-4">
                {linkItems.map((item:string) => <li><a href={`#${item.toLowerCase()}`} data-scroll>{item}</a></li>)}
            </ul>
        </div>
    </div>

    <!-- <div id="mobile-menu" class="absolute right-0 mt-2 w-56 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black/5 focus:outline-none">
        <ul class="flex flex-col gap-4">
            {linkItems.map((item:string) => <li><a href={`#${item.toLowerCase()}`} data-scroll>{item}</a></li>)}
        </ul>
    </div> -->
    

</nav>

<script>
    const navbar = document.getElementById('navbar')!;
  
    function handleScroll() {
      if (window.scrollY > 0) {
        navbar.classList.add('shadow-md');
      } else {
        navbar.classList.remove('shadow-md');
      }
    }
  
    window.addEventListener('scroll', handleScroll);
    handleScroll();

    const mobileButton = document.getElementById("mobile-button")!;
    const mobileMenu = document.getElementById("mobile-menu")!;

    mobileButton.addEventListener("click", () => {
        mobileMenu.classList.toggle("hidden");
    });

    const languageButton = document.getElementById("language-button")!;
    const languageMenu = document.getElementById("language-menu")!;
    languageButton.addEventListener("click", () => {
        languageMenu.classList.toggle("hidden");
    });
</script>